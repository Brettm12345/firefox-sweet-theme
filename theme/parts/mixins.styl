i = !important;
t = transparent;

v() {
  var(unquote('--sweet-' + arguments));
}

/**
 * c <foreground> <border-color> <background>
 * use 0 to omit arguments
 */
c(x, y = 0, z = 0) {
  if (x is a 'call' || (x is a 'rgba')) {
    color: x i;
  }

  if (y is a 'call' || (y is a 'rgba')) {
    border-color: y i;
  }

  if (z is a 'call' || (z is a 'rgba')) {
    background-color: z i;
  }
}

bg() {
  background: arguments i;
}

b() {
  border: arguments i;
}

bc() {
  border-color: arguments i;
}

bb() {
  border-bottom: arguments i;
}

bt() {
  border-top: arguments i;
}

bl() {
  border-left: arguments i;
}

br() {
  border-right: arguments i;
}

by() {
  border-top: arguments i;
  border-bottom: arguments i;
}

bx() {
  border-right: arguments i;
  border-left: arguments i;
}

bs() {
  background-size: arguments i;
}

bi() {
  background-image: arguments i;
}

r() {
  border-radius: arguments i;
}

m() {
  margin: arguments i;
}

mt() {
  margin-top: arguments i;
}

mb() {
  margin-bottom: arguments i;
}

ml() {
  margin-left: arguments i;
}

mr() {
  margin-right: arguments i;
}

my() {
  m: arguments 0;
}

mx() {
  m: arguments x;
}

ps() {
  position: arguments i;
}

p() {
  padding: arguments i;
}

pt() {
  padding-top: arguments i;
}

pb() {
  padding-bottom: arguments i;
}

pl() {
  padding-left: arguments i;
}

pr() {
  padding-right: arguments i;
}

s() {
  box-shadow: arguments i;
}

o() {
  opacity: arguments i;
}

a() {
  animation: arguments i;
}

tr() {
  transition: arguments i;
}

fn() {
  font-family: arguments i;
}

fs() {
  font-size: arguments i;
}

fw() {
  font-weight: arguments i;
}

td() {
  text-decoration: arguments i;
}

ta() {
  text-align: arguments i;
}

h() {
  height: arguments i;
}

mh() {
  max-height: arguments i;
}

w() {
  width: arguments i;
}

mx() {
  max-width: arguments i;
}

s() {
  w: arguments;
  h: arguments;
}

icon(x) {
  url('./theme/icons/' + x + '.svg');
}

img(x) {
  list-style-image: icon(x) i;
}

ap() {
  -moz-appearance: arguments i;
}